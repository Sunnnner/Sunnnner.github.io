<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on whiteKBlog</title><link>https://sunnnner.github.io/tags/docker/</link><description>Recent content in docker on whiteKBlog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 01 Nov 2019 15:35:30 +0800</lastBuildDate><atom:link href="https://sunnnner.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker添加root权限省去sudo</title><link>https://sunnnner.github.io/docker%E6%B7%BB%E5%8A%A0root%E6%9D%83%E9%99%90%E7%9C%81%E5%8E%BBsudo/</link><pubDate>Fri, 01 Nov 2019 15:35:30 +0800</pubDate><guid>https://sunnnner.github.io/docker%E6%B7%BB%E5%8A%A0root%E6%9D%83%E9%99%90%E7%9C%81%E5%8E%BBsudo/</guid><description>&lt;ul>
&lt;li>首先使用root权限账户登录系统&lt;/li>
&lt;li>首先查看用户组中有没有docker组sudo cat /etc/group | grep docker&lt;/li>
&lt;/ul>
&lt;p>创建docker分组，并将相应的用户添加到这个分组里面&lt;/p>
&lt;p>sudo groupadd -g 999 docker&lt;/p>
&lt;p>-g 999为组ID 也可以不指定&lt;/p>
&lt;p>sudo usermod -aG dockerroot username&lt;/p>
&lt;p>sudo usermod -aG docker username&lt;/p>
&lt;p>检查一下是否有效 cat /etc/group&lt;/p>
&lt;p>用户退出登录或者重启docker-daemon使权限生效&lt;/p>
&lt;p>sudo systemctl restart docker&lt;/p>
&lt;p>运行docker info查看是否生效&lt;/p>
&lt;p>如果提示get权限不足，修改/var/run/docker.sock权限即可&lt;/p>
&lt;p>sudo chmod a+rw /var/run/docker.sock&lt;/p></description></item><item><title>Docker操作</title><link>https://sunnnner.github.io/docker%E6%93%8D%E4%BD%9C/</link><pubDate>Tue, 08 Oct 2019 14:19:00 +0800</pubDate><guid>https://sunnnner.github.io/docker%E6%93%8D%E4%BD%9C/</guid><description>&lt;p>&lt;code>docker build&lt;/code> 打包docker 项目&lt;/p>
&lt;p>&lt;code>docker-compose up&lt;/code> 启动整体项目(docker-compose.yml文件)&lt;/p>
&lt;p>&lt;code>docker-compose down&lt;/code> 强制停止docker运行的所有项目&lt;/p>
&lt;p>1、删除所有容器 docker rm &lt;code>docker ps -a -q&lt;/code>&lt;/p>
&lt;p>2、删除所有镜像d ocker rmi &lt;code>docker images -q&lt;/code>&lt;/p>
&lt;p>3、按条件删除镜像 没有打标签docker rmi &lt;code>docker images -q | awk '/^&amp;lt;none&amp;gt;/ { print $3 }'&lt;/code>&lt;/p>
&lt;p>镜像名包含关键字docker rmi &amp;ndash;force &lt;code>docker images | grep doss-api | awk '{print $3}'&lt;/code> //其中doss-api为关键字&lt;/p>
&lt;p>　&lt;/p>
&lt;p>&lt;code>docker-compose.yml&lt;/code>&lt;/p>
&lt;p>&lt;code>service&lt;/code> 项目&lt;/p>
&lt;p>&lt;code>image docker&lt;/code>镜像名字，若本地没有会尝试在docker服务器拉取&lt;/p>
&lt;p>&lt;code>restart&lt;/code> 是否stop后重启&lt;/p>
&lt;p>&lt;code>command&lt;/code> 启动路径&lt;/p>
&lt;p>&lt;code>volumes&lt;/code> 将docker容器文件夹与本地文件夹映射挂载 [本地:docker文件夹]&lt;/p>
&lt;p>&lt;code>environment&lt;/code> 运行携带的参数&lt;/p>
&lt;p>&lt;code>ports&lt;/code>运行端口&lt;/p>
&lt;p>&lt;code>links&lt;/code> 关联项目，关联之后内部访问&lt;/p></description></item></channel></rss>