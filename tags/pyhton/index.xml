<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pyhton on whiteKBlog</title>
    <link>https://sunnnner.github.io/tags/pyhton/</link>
    <description>Recent content in pyhton on whiteKBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Sep 2019 11:30:51 +0800</lastBuildDate><atom:link href="https://sunnnner.github.io/tags/pyhton/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rclone挂载googleDrive</title>
      <link>https://sunnnner.github.io/rclone%E6%8C%82%E8%BD%BDgoogledrive/</link>
      <pubDate>Wed, 04 Sep 2019 11:30:51 +0800</pubDate>
      
      <guid>https://sunnnner.github.io/rclone%E6%8C%82%E8%BD%BDgoogledrive/</guid>
      <description>最近查找大容量存储工具，想到了免费版的Google云盘，询问了一下有一个无限空间的云盘，话不多说开始搞，在淘宝买了个账号开始配在自己的服务器上，但是发现并不是这么好配，查找了很多资料，到最后朋友给我说rclone可以挂在Google云盘，查了一下果然可以，把教程贴出来为以后查看方便 首先安装rclone wget https://www.moerats.com/usr/shell/rclone_debian.sh &amp;amp;&amp;amp; bash rclone_debian.sh 初始化配置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 rclone config n) New remote s) Set configuration password q) Quit config n/s/q&amp;gt; n name&amp;gt; Rats #随便填，后面要用到 Type of storage to configure.</description>
    </item>
    
    <item>
      <title>Rclone挂载googleDrive</title>
      <link>https://sunnnner.github.io/p/rclone%E6%8C%82%E8%BD%BDgoogledrive/</link>
      <pubDate>Wed, 04 Sep 2019 11:30:51 +0800</pubDate>
      
      <guid>https://sunnnner.github.io/p/rclone%E6%8C%82%E8%BD%BDgoogledrive/</guid>
      <description>最近查找大容量存储工具，想到了免费版的Google云盘，询问了一下有一个无限空间的云盘，话不多说开始搞，在淘宝买了个账号开始配在自己的服务器上，但是发现并不是这么好配，查找了很多资料，到最后朋友给我说rclone可以挂在Google云盘，查了一下果然可以，把教程贴出来为以后查看方便 首先安装rclone wget https://www.moerats.com/usr/shell/rclone_debian.sh &amp;amp;&amp;amp; bash rclone_debian.sh 初始化配置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 rclone config n) New remote s) Set configuration password q) Quit config n/s/q&amp;gt; n name&amp;gt; Rats #随便填，后面要用到 Type of storage to configure.</description>
    </item>
    
    <item>
      <title>Python工厂模式</title>
      <link>https://sunnnner.github.io/python%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 06 Sep 2018 10:34:03 +0800</pubDate>
      
      <guid>https://sunnnner.github.io/python%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</guid>
      <description>介绍一下工厂模式 1 2 3 4 5 工厂模式是一个在软件开发中用来创建对象的设计模式。 工厂模式包涵一个超类。这个超类提供一个抽象化的接口来创建一个特定类型的对象，而不是决定哪个对象可以被创建。 当程序运行输入一个“类型”的时候，需要创建于此相应的对象。这就用到了工厂模式。在如此情形中，实现代码基于工厂模式，可以达到可扩展，可维护的代码。当增加一个新的类型，不在需要修改已存在的类，只增加能够产生新类型的子类。 简单工厂模式的实质是由一个工厂类根据传入的参数，动态决定应该创建哪一个产品类（这些产品类继承自一个父类或接口）的实例。 封装函数，动态创建商品类 说说有哪些mvc模式的框架 1 2 3 Struts、Spring、ZF/.NET 耦合性低/重用性高/生命周期成本低/部署快/可维护性高/有利软件工程化管理 `` </description>
    </item>
    
    <item>
      <title>Python工厂模式</title>
      <link>https://sunnnner.github.io/p/python%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Thu, 06 Sep 2018 10:34:03 +0800</pubDate>
      
      <guid>https://sunnnner.github.io/p/python%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</guid>
      <description>介绍一下工厂模式 1 2 3 4 5 工厂模式是一个在软件开发中用来创建对象的设计模式。 工厂模式包涵一个超类。这个超类提供一个抽象化的接口来创建一个特定类型的对象，而不是决定哪个对象可以被创建。 当程序运行输入一个“类型”的时候，需要创建于此相应的对象。这就用到了工厂模式。在如此情形中，实现代码基于工厂模式，可以达到可扩展，可维护的代码。当增加一个新的类型，不在需要修改已存在的类，只增加能够产生新类型的子类。 简单工厂模式的实质是由一个工厂类根据传入的参数，动态决定应该创建哪一个产品类（这些产品类继承自一个父类或接口）的实例。 封装函数，动态创建商品类 说说有哪些mvc模式的框架 1 2 3 Struts、Spring、ZF/.NET 耦合性低/重用性高/生命周期成本低/部署快/可维护性高/有利软件工程化管理 `` </description>
    </item>
    
  </channel>
</rss>
